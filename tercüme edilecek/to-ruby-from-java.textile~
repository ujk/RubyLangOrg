Java oturmuş bir dildir, kararlıdır ve hızlıdır (Java karşıtları bunu kabul etmezler) 
Ayrıca biraz da gereksiz kalabalık kodları vardır. Java'dan Ruby'ye geçince kodunuzun 
boyutunun azalması beklenir, ayrıca prototiplere daha çabuk ulaşırsınız. 

h3. Benzerlikler

Java'da olduğu gibi Ruby'de de,...
* Hafıza kullanımı sizin tarafınızdan yönetilir.
* Nesneleri işlemekte güçlüdür.
* Public, private ve protected metodlar vardır.
* Gömülü dökümanlama araçları vardır (Ruby'ninki RDoc olarak isimlendirilir). RDoc 
ile hazırlanan dökümanlar javadoc ile hazırlanana çok benzer. 

h3. Farklar

Ruby'de Java'dan farklı olarak,...
* Kodunuzu derlemeye gerek yoktur, direk olarak çalıştırırsınız. 
* Ruby kullanıcıları değişik GUI araşları kullanabilir 
"WxRuby":http://wxruby.rubyforge.org/wiki/wiki.pl,
"FXRuby":http://www.fxruby.org/,
"Ruby-GNOME2":http://ruby-gnome2.sourceforge.jp/,
ya da Ruby içinde yüklü gelen Tk bunların bazıları.
* Sınıflar, metodlar gibi birşeyleri tanımlarken kod bloğunu süslü parantez içine 
almak yerine sonunda @end@ deyimi kullanırsınız 
* @import@ yerine @require@ kullanılır.
* Sınıf içinde tüm değişkenler özeldir. Dışardan herşeye metodlarla erişirsiniz.
* Metod çağrılarında parantezler genelde opsiyoneldir ve çoğunlukla da kullanılmaz.
* Herşey bir nesnedir, 2 veya 3.14159 gibi sayılar dahil.
* Sabit tip kontrolü yoktur.
* Değişken isimleri sadece etiketlerdir. Belirlenmiş bir tipe bağlanmazlar.
* Tip tanımlamaları yoktur. Yeni bir değişken üretirken sadece kendisine değer 
atamak yeterlidir. (örn. @int[] a = {1,2,3};@ yerine @a = [1,2,3]@ yazılır)
* There's no casting. Just call the methods. Your unit tests should tell you
before you even run the code if you're going to see an exception.
* It's @foo = Foo.new( "hi")@ instead of @Foo foo = new Foo( "hi" )@.
* The constructor is always named "initialize" instead of the name of the class.
* You have "mixin's" instead of interfaces.
* YAML tends to be favored over XML.
* It's @nil@ instead of @null@.
* @==@ and @equals()@ are handled differently in Ruby.  Use @==@ when you want to test equivalence in Ruby (@equals()@ is Java).  Use @equal?()@ when you want to know if two objects are the same (@==@ in Java). 
